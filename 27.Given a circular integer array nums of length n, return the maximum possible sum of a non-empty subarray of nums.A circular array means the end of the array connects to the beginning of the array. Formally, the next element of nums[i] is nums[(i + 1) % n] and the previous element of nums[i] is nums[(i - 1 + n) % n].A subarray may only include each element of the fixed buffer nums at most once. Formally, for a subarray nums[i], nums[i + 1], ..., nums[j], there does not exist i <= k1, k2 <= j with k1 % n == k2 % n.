def max_subarray_sum_circular(nums):
    """
    Given a circular integer array nums of length n, return the maximum possible sum of a non-empty subarray of nums.
    """
    n = len(nums)
    total_sum = sum(nums)

    max_sum = float('-inf')
    current_sum = 0

    for num in nums:
        current_sum = max(num, current_sum + num)
        max_sum = max(max_sum, current_sum)

    min_sum = float('inf')
    current_min_sum = 0

    for num in nums:
        current_min_sum = min(num, current_min_sum + num)
        min_sum = min(min_sum, current_min_sum)

    if total_sum == min_sum:
        return max_sum

    return max(max_sum, total_sum - min_sum)

# Example usage:
nums = [1, -2, 3, -2]
print(max_subarray_sum_circular(nums))  # Output: 3
