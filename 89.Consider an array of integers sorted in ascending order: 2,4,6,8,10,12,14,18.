def merge_sort(arr):
    if len(arr) <= 1:
        return arr
    
    mid = len(arr) // 2
    left_half = merge_sort(arr[:mid])
    right_half = merge_sort(arr[mid:])
    
    return merge(left_half, right_half)

def merge(left, right):
    sorted_array = []
    i = j = 0
    
    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            sorted_array.append(left[i])
            i += 1
        else:
            sorted_array.append(right[j])
            j += 1
    
    # Collect remaining elements
    sorted_array.extend(left[i:])
    sorted_array.extend(right[j:])
    
    return sorted_array

# Test Cases for Merge Sort
unsorted_cases = [
    (8, [31, 23, 35, 27, 11, 21, 15, 28]),
    (10, [22, 34, 25, 36, 43, 67, 52, 13, 65, 17])
]

for N, arr in unsorted_cases:
    sorted_arr = merge_sort(arr)
    print(f"Input: N={N}, a={arr} => Output: {', '.join(map(str, sorted_arr))}")
