class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        # Find the first position of the target
        def find_first_pos(left, right):
            while left <= right:
                mid = (left + right) // 2
                if nums[mid] < target:
                    left = mid + 1
                else:
                    right = mid - 1
            return left

        # Find the last position of the target
        def find_last_pos(left, right):
            while left <= right:
                mid = (left + right) // 2
                if nums[mid] > target:
                    right = mid - 1
                else:
                    left = mid + 1
            return right

        # Find the first and last position of the target
        first_pos = find_first_pos(0, len(nums) - 1)
        last_pos = find_last_pos(0, len(nums) - 1)

        # Check if the target is found
        if first_pos <= last_pos and nums[first_pos] == target:
            return [first_pos, last_pos]
        else:
            return [-1, -1]

# Example usage
def printResult(nums, target, result):
    print("Array:", nums)
    print("Target:", target)
    print("Result:", result)
    print()

# Create the input array and target
nums = [5, 7, 7, 8, 8, 10]
target = 8

# Find the first and last position of the target
solution = Solution()
result = solution.searchRange(nums, target)

# Print the result
printResult(nums, target, result)

# Create the input array and target
nums = [5, 7, 7, 8, 8, 10]
target = 6

# Find the first and last position of the target
solution = Solution()
result = solution.searchRange(nums, target)

# Print the result
printResult(nums, target, result)

# Create the input array and target
nums = []
target = 0

# Find the first and last position of the target
solution = Solution()
result = solution.searchRange(nums, target)

# Print the result
printResult(nums, target, result)
