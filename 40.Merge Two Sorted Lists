# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def mergeTwoLists(self, list1: ListNode, list2: ListNode) -> ListNode:
        # Create a dummy node to simplify the code
        dummy = ListNode()
        current = dummy

        # Merge the two lists
        while list1 and list2:
            if list1.val < list2.val:
                current.next = list1
                list1 = list1.next
            else:
                current.next = list2
                list2 = list2.next
            current = current.next

        # Append the remaining nodes, if any
        current.next = list1 or list2

        # Return the head of the merged list
        return dummy.next

# Example usage
def printList(node):
    while node:
        print(node.val, end=" ")
        node = node.next
    print()

# Create the first list: 1 -> 2 -> 4
list1 = ListNode(1)
list1.next = ListNode(2)
list1.next.next = ListNode(4)

# Create the second list: 1 -> 3 -> 4
list2 = ListNode(1)
list2.next = ListNode(3)
list2.next.next = ListNode(4)

# Merge the two lists
solution = Solution()
mergedList = solution.mergeTwoLists(list1, list2)

# Print the merged list
print("Merged List:")
printList(mergedList)
